CREATE OR REPLACE FUNCTION CalculateAge(DateOfBirth DATE) RETURN NUMBER DETERMINISTIC IS
BEGIN
  RETURN TRUNC(MONTHS_BETWEEN(SYSDATE, DateOfBirth) / 12);
END;
/

ALTER TABLE Soldier ADD Age NUMBER GENERATED ALWAYS AS (CalculateAge(DateOfBirth));




CREATE SEQUENCE MedicalIDSeq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;


CREATE OR REPLACE TRIGGER MedicalIDTrigger
BEFORE INSERT ON MedicalInfo
FOR EACH ROW
BEGIN
  SELECT MedicalIDSeq.NEXTVAL INTO :new.MedicalID FROM dual;
END;
/


CREATE OR REPLACE VIEW manage_company_view AS
SELECT
  C.COMPANYID,
  C.COMPANYNAME,
  S.NAME AS "Coy Comd",
  (SELECT COUNT(*) FROM SOLDIER WHERE COMPANYID = C.COMPANYID) AS TotalManpower
FROM
  COMPANY C
  JOIN SOLDIER S ON C.COMPANYID = S.COMPANYID
  JOIN SOLDIERAPPOINTMENT SA ON S.SOLDIERID = SA.SOLDIERID
  JOIN APPOINTMENTS A ON SA.APPOINTMENTID = A.APPOINTMENTID
WHERE
  A.APPOINTMENTNAME = 'COY COMD';




CREATE OR REPLACE VIEW todays_leave_view AS
SELECT s.SoldierID, s.Name, r.Rank, t.Trade, c.CompanyName, l.LeaveType, l.LeaveStartDate, l.LeaveEndDate,
       (l.LeaveEndDate - TRUNC(SYSDATE)) AS RemainingLeave
FROM Soldier s
JOIN Ranks r ON s.RankID = r.RankID
JOIN Trade t ON s.TradeID = t.TradeID
JOIN Company c ON s.CompanyID = c.CompanyID
JOIN LeaveModule l ON s.SoldierID = l.SoldierID
WHERE l.LeaveStartDate <= TRUNC(SYSDATE)
AND l.LeaveEndDate >= TRUNC(SYSDATE);


